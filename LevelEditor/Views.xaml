<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LevelEditor"
                    xmlns:vm="clr-namespace:LevelEditor.ViewModels"
                    xmlns:cvt="clr-namespace:LevelEditor.ValueConverters"
                    xmlns:bhv="clr-namespace:LevelEditor.Behaviors"
                    xmlns:ctrls="clr-namespace:LevelEditor.Controls"
                    xmlns:layerData="clr-namespace:LayerDataReaderWriter;assembly=LayerDataReaderWriter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <cvt:ElementImageValueConverter x:Key="ElementImageValueConverter"/>
    <cvt:ColliderImageValueConverter x:Key="ColliderImageValueConverter"/>
    <cvt:InverseCoordinateValueConverter x:Key="InverseCoordinateValueConverter"/>
    <cvt:BlockThumbnailValueConverter x:Key="BlockThumbnailValueConverter"/>
    <cvt:LayerValueConverter x:Key="LayerValueConverter"/>

    <Style x:Key="GameBoardElementContainerStyle" TargetType="{x:Type ctrls:GameBoardItem}">
        <Setter Property="UnitPositionX" Value="{Binding UnitPositionX}"/>
        <Setter Property="UnitPositionY" Value="{Binding UnitPositionY}"/>
        <Setter Property="PivotX" Value="{Binding PivotX}"/>
        <Setter Property="PivotY" Value="{Binding PivotY}"/>
        <Setter Property="Angle" Value="{Binding Angle}"/>
        <Setter Property="ScaleX" Value="{Binding ScaleX}"/>
        <Setter Property="ScaleY" Value="{Binding ScaleY}"/>
        <Setter Property="DpiBasedScaleX" Value="{Binding DpiBasedScaleX}"/>
        <Setter Property="DpiBasedScaleY" Value="{Binding DpiBasedScaleY}"/>
        <Setter Property="Layer" Value="{Binding Layer}"/>
        <Setter Property="Depth" Value="{Binding Depth}"/>
        <Setter Property="Type" Value="{Binding Type}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
    </Style>

    <Style x:Key="NoHighlightComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="bhv:PreventScrollingBehavior.IsAttached" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#256EC2"/>
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="WhiteSmoke"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ElementToolBoxElementView">
        <Image x:Name="img" Source="{Binding Type, Mode=OneTime, Converter={StaticResource ElementImageValueConverter}}" Width="64" Height="64" Stretch="Uniform" Margin="1" bhv:DragDrop.DragSource="{Binding}">
            <ToolTipService.ToolTip>
                <StackPanel Orientation="Horizontal" TextBlock.FontSize="16">
                    <TextBlock Text="Type: "/>
                    <TextBlock Text="{Binding Type, Mode=OneTime}"/>
                </StackPanel>
            </ToolTipService.ToolTip>
        </Image>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter TargetName="img" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="GameBoardElementToolBoxCategoryView">
        <Border Background="#10000000" CornerRadius="2" Margin="3" Padding="2" Focusable="False">
            <Expander x:Name="exp" IsExpanded="False">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name, Mode=OneTime}" VerticalAlignment="Center" Margin="1,1,6,1"/>
                        <StackPanel x:Name="previewIcons" Orientation="Horizontal">
                            <Image Source="{Binding Elements[0].Type, Mode=OneTime, Converter={StaticResource ElementImageValueConverter}}" Width="18" Height="18" Stretch="Uniform" Margin="2,0,2,0"/>
                            <Image Source="{Binding Elements[1].Type, Mode=OneTime, Converter={StaticResource ElementImageValueConverter}}" Width="18" Height="18" Stretch="Uniform" Margin="2,0,2,0"/>
                            <Image Source="{Binding Elements[2].Type, Mode=OneTime, Converter={StaticResource ElementImageValueConverter}}" Width="18" Height="18" Stretch="Uniform" Margin="2,0,2,0"/>
                        </StackPanel>
                    </StackPanel>
                </Expander.Header>
                <ItemsControl ItemsSource="{Binding Elements, Mode=OneTime}" ItemTemplate="{StaticResource ElementToolBoxElementView}" Focusable="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Focusable="False"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Expander>
        </Border>
        <DataTemplate.Triggers>
            <Trigger SourceName="exp" Property="IsExpanded" Value="True">
                <Setter TargetName="previewIcons" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ElementToolBoxView">
        <Grid Focusable="False">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Game Board Elements" FontWeight="Bold" FontSize="12" Margin="2"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal" Focusable="False">
                <TextBlock Text="Search:" VerticalAlignment="Center" Margin="2"/>
                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Padding="1" Margin="2" VerticalAlignment="Center" MinWidth="150" MaxWidth="250" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
            </StackPanel>
            <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Focusable="False">
                <ItemsControl ItemsSource="{Binding Categories}" ItemTemplate="{StaticResource GameBoardElementToolBoxCategoryView}" Focusable="False"/>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ElementInstanceView">
        <Image Source="{Binding Type, Mode=OneWay, Converter={StaticResource ElementImageValueConverter}}" Stretch="None"/>
    </DataTemplate>

    <Style x:Key="PropertyGridTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <DataTemplate x:Key="GroupedDoubleInversedValueView">
        <TextBox Text="{Binding Value, Converter={StaticResource InverseCoordinateValueConverter}}" Style="{StaticResource PropertyGridTextBoxStyle}" ToolTipService.IsEnabled="{Binding HasExtendedValues}" bhv:TextBoxEnhancerBehavior.IsAttached="True">
            <TextBox.ToolTip>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Min: "/>
                        <TextBlock Text="{Binding Min, Mode=OneTime, Converter={StaticResource InverseCoordinateValueConverter}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Max: "/>
                        <TextBlock Text="{Binding Max, Mode=OneTime, Converter={StaticResource InverseCoordinateValueConverter}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Average: "/>
                        <TextBlock Text="{Binding Avg, Mode=OneTime, Converter={StaticResource InverseCoordinateValueConverter}}"/>
                    </StackPanel>
                </StackPanel>
            </TextBox.ToolTip>
        </TextBox>
    </DataTemplate>

    <DataTemplate x:Key="GroupedDoubleValueView">
        <TextBox Text="{Binding Value}" Style="{StaticResource PropertyGridTextBoxStyle}" ToolTipService.IsEnabled="{Binding HasExtendedValues}" bhv:TextBoxEnhancerBehavior.IsAttached="True">
            <TextBox.ToolTip>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Min: "/>
                        <TextBlock Text="{Binding Min, Mode=OneTime}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Max: "/>
                        <TextBlock Text="{Binding Max, Mode=OneTime}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Average: "/>
                        <TextBlock Text="{Binding Avg, Mode=OneTime}"/>
                    </StackPanel>
                </StackPanel>
            </TextBox.ToolTip>
        </TextBox>
    </DataTemplate>
    
    <DataTemplate x:Key="SelectedBlockElementsView">
        <Grid Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- 0 -->
                <RowDefinition Height="Auto"/> <!-- 1 -->
                <RowDefinition Height="Auto"/> <!-- 2 -->
                <RowDefinition Height="Auto"/> <!-- 3 -->
                <RowDefinition Height="Auto"/> <!-- 4 -->
                <RowDefinition Height="Auto"/> <!-- 5 -->
                <RowDefinition Height="Auto"/> <!-- 6 -->
                <RowDefinition Height="Auto"/> <!-- 7 -->
                <RowDefinition Height="Auto"/> <!-- 8 -->
                <RowDefinition Height="Auto"/> <!-- 9 -->
            </Grid.RowDefinitions>

            <!-- Row 0 -->
            <TextBlock Text="Selected Elements: " Grid.Column="0" Grid.ColumnSpan="5" FontWeight="Bold" FontSize="12" Margin="2"/>

            <!-- Row 1 -->
            <TextBlock Text="ID: " Grid.Column="0" Grid.Row="1" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <TextBox Text="{Binding UniqueIdentifier, Mode=OneTime}" Grid.Column="2" Grid.Row="1" Margin="3" Padding="1" IsReadOnly="True" VerticalAlignment="Center"/>

            <!-- Row 2 -->
            <TextBlock Text="Translation: " Grid.Column="0" Grid.Row="2" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <TextBlock Text="X " Grid.Column="1" Grid.Row="2" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding UnitPositionX}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" Focusable="False"/>
            <TextBlock Text="Y " Grid.Column="3" Grid.Row="2" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding UnitPositionY}" ContentTemplate="{StaticResource GroupedDoubleInversedValueView}" Grid.Column="4" Grid.Row="2" VerticalAlignment="Center" Focusable="False"/>

            <!-- Row 3 -->
            <TextBlock Text="Layer: " Grid.Column="0" Grid.Row="3" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ComboBox
                Grid.Column="2"
                Grid.Row="3"
                Margin="3"
                Padding="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Root.Layers, Mode=OneTime}"
                SelectedValue="{Binding Layer, Converter={StaticResource LayerValueConverter}}"
                SelectedItem="{Binding Layer, Converter={StaticResource LayerValueConverter}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, Mode=OneTime}" VerticalAlignment="Center" Margin="1" ToolTipService.ToolTip="{Binding Description, Mode=OneTime}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Orientation="Horizontal" Grid.Column="4" Grid.Row="3" Margin="2" VerticalAlignment="Center" ToolTipService.ToolTip="Value stored in the data">
                <TextBlock Text="(value: " VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Layer}" VerticalAlignment="Center"/>
                <TextBlock Text=")" VerticalAlignment="Center"/>
            </StackPanel>

            <!-- Row 4 -->
            <TextBlock Text="Depth: " Grid.Column="0" Grid.Row="4" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Depth}" Grid.Column="2" Grid.ColumnSpan="3" Grid.Row="4" Margin="3" Padding="1" VerticalAlignment="Center"/>

            <!-- Row 5 -->
            <TextBlock Text="Pivot: " Grid.Column="0" Grid.Row="5" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <TextBlock Text="X " Grid.Column="1" Grid.Row="5" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding PivotX}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="2" Grid.Row="5" VerticalAlignment="Center" Focusable="False"/>
            <TextBlock Text="Y " Grid.Column="3" Grid.Row="5" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding PivotY}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="4" Grid.Row="5" VerticalAlignment="Center" Focusable="False"/>

            <!-- Row 6 -->
            <TextBlock Text="Rotation: " Grid.Column="0" Grid.Row="6" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding Angle}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="2" Grid.ColumnSpan="3" Grid.Row="6" VerticalAlignment="Center" Focusable="False"/>

            <!-- Row 7 -->
            <TextBlock Text="Scale: " Grid.Column="0" Grid.Row="7" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <TextBlock Text="X " Grid.Column="1" Grid.Row="7" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding ScaleX}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Focusable="False"/>
            <TextBlock Text="Y " Grid.Column="3" Grid.Row="7" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ContentControl Content="{Binding ScaleY}" ContentTemplate="{StaticResource GroupedDoubleValueView}" Grid.Column="4" Grid.Row="7" VerticalAlignment="Center" Focusable="False"/>

            <!-- Row 8 -->
            <TextBlock Text="Type: " Grid.Column="0" Grid.Row="8" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ComboBox
                Grid.Column="2"
                Grid.Row="8"
                Margin="3"
                Padding="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Root.ElementTypes, Mode=OneTime}"
                SelectedValue="{Binding Type}"
                SelectedItem="{Binding Type}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Image Width="23" Height="23" Margin="1" Source="{Binding Converter={StaticResource ElementImageValueConverter}, Mode=OneTime}"/>
                            <TextBlock Text="(Type: " VerticalAlignment="Center" Margin="6,1,1,1"/>
                            <TextBlock Text="{Binding Mode=OneTime}" VerticalAlignment="Center" Margin="1"/>
                            <TextBlock Text=")" VerticalAlignment="Center" Margin="1"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Orientation="Horizontal" Grid.Column="4" Grid.Row="8" Margin="2" VerticalAlignment="Center" ToolTipService.ToolTip="Value stored in the data">
                <TextBlock Text="(value: " VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Type}" VerticalAlignment="Center"/>
                <TextBlock Text=")" VerticalAlignment="Center"/>
            </StackPanel>

            <!-- Row 9 -->
            <TextBlock Text="Collider: " Grid.Column="0" Grid.Row="9" Margin="1" Padding="1" VerticalAlignment="Center"/>
            <ComboBox
                Grid.Column="2"
                Grid.ColumnSpan="3"
                Grid.Row="9"
                Margin="3"
                Padding="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Root.ColliderTypes, Mode=OneTime}"
                SelectedValue="{Binding ColliderType}"
                SelectedItem="{Binding ColliderType}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Viewbox Width="23" Height="23" Margin="1">
                                <ContentControl Content="{Binding Converter={StaticResource ColliderImageValueConverter}}"/>
                            </Viewbox>
                            <TextBlock Text="(Collision Type: " VerticalAlignment="Center" Margin="6,1,1,1"/>
                            <TextBlock Text="{Binding Mode=OneTime}" VerticalAlignment="Center" Margin="1"/>
                            <TextBlock Text=")" VerticalAlignment="Center" Margin="1"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="LayerBlockInfoView">
        <Expander IsExpanded="True" Background="#20000000" Margin="4" VerticalAlignment="Top">
            <Expander.Header>
                <StackPanel  Orientation="Horizontal" Margin="10, 0, 0, 0">
                    <TextBlock Text="Game Board Info" FontWeight="Bold" VerticalAlignment="Center"/>
                    <TextBlock Text="Zoom: " VerticalAlignment="Center" Margin="20,1,1,1" Padding="1"/>
                    <StackPanel Orientation="Horizontal">
                        <Slider Width="250" Value="{Binding Zoom}" Minimum="0.1" Maximum="3" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" TickFrequency="0.1" Margin="1" Padding="1"/>
                        <TextBlock Text="{Binding Zoom}" Margin="1" Padding="1" VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
            </Expander.Header>

            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ToggleButton Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" Margin="3" IsChecked="{Binding IsCanvasSizeMode}">
                    <Image Source="Resources/resize.png" Margin="2" Stretch="None" SnapsToDevicePixels="True"/>
                    <ToggleButton.ToolTip>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Current size mode: " FontWeight="Bold"/>
                                <TextBlock x:Name="currentSizeMode" FontWeight="Bold" Foreground="Blue"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Click to switch to size mode "/>
                                <TextBlock x:Name="nextSizeMode"/>
                            </StackPanel>
                        </StackPanel>
                    </ToggleButton.ToolTip>
                </ToggleButton>

                <TextBlock Grid.Column="1" Grid.Row="0" Text="Width: " VerticalAlignment="Center" Margin="1" Padding="1"/>
                <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding BlockWidth}" VerticalAlignment="Center" Margin="1" Padding="1" Width="100" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>

                <TextBlock Grid.Column="1" Grid.Row="1" Text="Height: " VerticalAlignment="Center" Margin="1" Padding="1"/>
                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding BlockHeight}" VerticalAlignment="Center" Margin="1" Padding="1" Width="100" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>

                <TextBlock Grid.Column="3" Grid.Row="0" Text="Snap X: " VerticalAlignment="Center" Margin="10, 1, 1, 1" Padding="1"/>
                <TextBox Grid.Column="4" Grid.Row="0" Text="{Binding SnapX}" VerticalAlignment="Center" Margin="1" Padding="1" Width="100" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>

                <TextBlock Grid.Column="3" Grid.Row="1" Text="Snap Y: " VerticalAlignment="Center" Margin="10, 1, 1, 1" Padding="1"/>
                <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding SnapY}" VerticalAlignment="Center" Margin="1" Padding="1" Width="100" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>

            </Grid>
        </Expander>
        
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCanvasSizeMode}" Value="True">
                <Setter TargetName="currentSizeMode" Property="Text" Value="canvas"/>
                <Setter TargetName="nextSizeMode" Property="Text" Value="stretch"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCanvasSizeMode}" Value="False">
                <Setter TargetName="currentSizeMode" Property="Text" Value="stretch"/>
                <Setter TargetName="nextSizeMode" Property="Text" Value="canvas"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="LayerDataDropDownItemView">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <CheckBox Grid.Column="0" Grid.Row="0" IsChecked="{Binding IsEnabled}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2" ToolTipService.ToolTip="Enable or disable block (metadata)"/>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="ID: " HorizontalAlignment="Right" VerticalAlignment="Center" Margin="2" Padding="1"/>
            <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Text="{Binding Identifier, Mode=OneTime}" IsReadOnly="True" VerticalAlignment="Center" Margin="2" Padding="1" Width="50" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>

            <TextBlock Grid.Column="0" Grid.Row="1" Text="Elements: " VerticalAlignment="Center" Margin="1" Padding="1"/>
            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding InstanceCount}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1" Padding="1"/>
            <Button Grid.Column="2" Grid.Row="1" Content="X" Width="20" Height="20" Margin="2" Command="{Binding DeleteBlockCommand, Mode=OneTime}" ToolTipService.ToolTip="Delete the block"/>

            <Image Grid.Column="3" Grid.Row="0" Grid.RowSpan="3" Width="200" Height="88" Source="{Binding Path=., Converter={StaticResource BlockThumbnailValueConverter}}" Stretch="Uniform"/>

            <StackPanel Grid.Column="2" Grid.Row="2" VerticalAlignment="Bottom" TextElement.FontSize="9">
                <Button Content="Up" Command="{Binding MoveUpCommand, Mode=OneTime}" ToolTipService.ToolTip="Move this block up" Margin="1,1,1,0"/>
                <Button Content="Dn" Command="{Binding MoveDownCommand, Mode=OneTime}" ToolTipService.ToolTip="Move this block down" Margin="1,1,1,0"/>
            </StackPanel>
            
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="LayerDataSelectedItemView">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="ID: " HorizontalAlignment="Right" VerticalAlignment="Center" Margin="2" Padding="1"/>
            <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Text="{Binding Identifier, Mode=OneTime}" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" Margin="2" Padding="1" Width="50"/>

            <TextBlock Grid.Column="0" Grid.Row="1" Text="Elements: " VerticalAlignment="Center" Margin="1" Padding="1"/>
            <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding InstanceCount}" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1" Padding="1"/>

        </Grid>
    </DataTemplate>

    <local:ComboBoxItemTemplateSelector x:Key="ComboBoxItemTemplateSelector"
                                        DropDownTemplate="{StaticResource LayerDataDropDownItemView}"
                                        SelectedTemplate="{StaticResource LayerDataSelectedItemView}"/>

    <DataTemplate x:Key="FlagView">
        <CheckBox Content="{Binding Semantic, Mode=OneTime}" IsChecked="{Binding IsChecked}" Margin="2" HorizontalAlignment="Left"/>
    </DataTemplate>

    <DataTemplate x:Key="LayerDataView">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top">
                <ctrls:SmoothComboBox
                    HorizontalAlignment="Left"
                    ItemsSource="{Binding Blocks}"
                    SelectedItem="{Binding SelectedBlock}"
                    ItemTemplateSelector="{StaticResource ComboBoxItemTemplateSelector}"
                    ItemContainerStyle="{StaticResource NoHighlightComboBoxItemStyle}"
                    MaxDropDownHeight="3000"
                    Margin="2"/>
                <UniformGrid Rows="2" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Button
                        Content="+>"
                        FontSize="14"
                        Margin="2"
                        Padding="6,2,6,2"
                        Command="{Binding DuplicateBlockCommand, Mode=OneTime}"
                        ToolTipService.ToolTip="Duplicate the currently selected block"/>
                    <Button
                        Content="+"
                        FontSize="14"
                        Margin="2"
                        Padding="6,2,6,2"
                        Command="{Binding AddBlockCommand, Mode=OneTime}"
                        ToolTipService.ToolTip="Add a new block"/>
                </UniformGrid>
            </StackPanel>

            <UniformGrid Grid.Column="1" Grid.Row="0" DataContext="{Binding SelectedBlock, Mode=OneWay}" Columns="2" UseLayoutRounding="True">

                <ContentControl Content="{Binding Info}" ContentTemplate="{StaticResource LayerBlockInfoView}" Focusable="False"/>

                <Expander IsExpanded="True" Background="#20000000" Margin="4" VerticalAlignment="Top">
                    <Expander.Header>
                        <TextBlock Text="Block Info" FontWeight="Bold"/>
                    </Expander.Header>
                    <StackPanel Margin="5">
                        <ItemsControl ItemsSource="{Binding Info.Flags}" ItemTemplate="{StaticResource FlagView}" Focusable="False">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" Focusable="False"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock Text="Difficulty: " VerticalAlignment="Center" Margin="1" Padding="1"/>
                            <TextBox Text="{Binding Difficulty}" VerticalAlignment="Center" Margin="1" Padding="1" Width="50" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
                        </StackPanel>
                    </StackPanel>
                </Expander>
            </UniformGrid>

            <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
                <ScrollViewer x:Name="gameboard" DataContext="{Binding SelectedBlock, Mode=OneWay}" Background="Gray" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Focusable="False">
                    <ctrls:GameBoardItemsControl
                        FuckTheOneWayToSourceCommand="{Binding Parent.FuckTheOneWayToSourceCommand, Mode=OneWay}"
                        CanvasBackgroundRendererWrappers="{Binding Parent.CanvasBackgroundRendererWrappers, Mode=OneWay}"
                        CanvasForegroundRendererWrappers="{Binding Parent.CanvasForegroundRendererWrappers, Mode=OneWay}"
                        Focusable="True"
                        Background="#20FFFFFF"
                        Margin="50"
                        bhv:DragDrop.DropTarget="{Binding}"
                        SelectionTool="{Binding Parent.SelectionTool}"
                        IsDragging="{Binding IsDragging}"
                        Width="{Binding Info.BlockWidth, Mode=OneWay}"
                        Height="{Binding Info.BlockHeight, Mode=OneWay}"
                        ItemsSource="{Binding Instances}"
                        ItemTemplate="{StaticResource ElementInstanceView}"
                        ItemContainerStyle="{StaticResource GameBoardElementContainerStyle}">
                        <ctrls:GameBoardItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ctrls:GameBoardItemsControl.ItemsPanel>
                        <ctrls:GameBoardItemsControl.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding Info.Zoom}" ScaleY="{Binding Info.Zoom}"/>
                        </ctrls:GameBoardItemsControl.LayoutTransform>
                    </ctrls:GameBoardItemsControl>
                </ScrollViewer>
                <StackPanel x:Name="progress" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="Hidden">
                    <TextBlock Text="{Binding WorkInProgressText}" HorizontalAlignment="Center" Margin="8"/>
                    <ProgressBar Minimum="0" Maximum="1" Width="500" Height="40" Value="{Binding WorkInProgressRate}" HorizontalAlignment="Center" Margin="8"/>
                </StackPanel>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding WorkInProgress}" Value="True">
                <Setter TargetName="gameboard" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="progress" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FeatureToolBoxView">
        <StackPanel bhv:ToolBoxKeyBindingsBehavior.KeyCommand="{Binding KeyCommand, Mode=OneTime}">
            <TextBlock Text="Features:" FontWeight="Bold" FontSize="12"/>
            <ListBox SelectedItem="{Binding SelectedTool}" ItemsSource="{Binding AvailableTools}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <RadioButton
                                        Style="{StaticResource {x:Type ToggleButton}}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Margin="{TemplateBinding Margin}"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, Mode=OneTime}" HorizontalAlignment="Left"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Template>
                    <ControlTemplate TargetType="ListBox">
                        <ItemsPresenter/>
                    </ControlTemplate>
                </ListBox.Template>
            </ListBox>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="BooleanPropertyView">
        <CheckBox x:Name="ctrl" IsChecked="{Binding BooleanValue}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsNew, Mode=OneWay}" Value="True">
                <Setter TargetName="ctrl" Property="bhv:FocusOnLoadBehavior.IsAttached" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="IntegerPropertyView">
        <TextBox x:Name="ctrl" Text="{Binding IntegerValue}" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsNew, Mode=OneWay}" Value="True">
                <Setter TargetName="ctrl" Property="bhv:FocusOnLoadBehavior.IsAttached" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FloatPropertyView">
        <TextBox x:Name="ctrl" Text="{Binding FloatValue}" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsNew, Mode=OneWay}" Value="True">
                <Setter TargetName="ctrl" Property="bhv:FocusOnLoadBehavior.IsAttached" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StringPropertyView">
        <TextBox x:Name="ctrl" Text="{Binding StringValue}" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsNew, Mode=OneWay}" Value="True">
                <Setter TargetName="ctrl" Property="bhv:FocusOnLoadBehavior.IsAttached" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="GuidPropertyView">
        <TextBox x:Name="ctrl" Text="{Binding GuidValue}" bhv:TextBoxEnhancerBehavior.IsAttached="True"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsNew, Mode=OneWay}" Value="True">
                <Setter TargetName="ctrl" Property="bhv:FocusOnLoadBehavior.IsAttached" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ComponentInstancePropertyView">
        <DockPanel LastChildFill="True" ToolTipService.ToolTip="{Binding Description, Mode=OneTime}" Focusable="False">
            <Button DockPanel.Dock="Left" Content="X" ToolTipService.ToolTip="Remove" Margin="1,1,8,1" VerticalAlignment="Center" HorizontalAlignment="Left" Command="{Binding RemoveCommand, Mode=OneTime}" Width="18" Height="18"/>
            <TextBlock DockPanel.Dock="Left" Text="Name: " VerticalAlignment="Center" Margin="2"/>
            <TextBox DockPanel.Dock="Left" x:Name="txtName" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" MinWidth="50" MaxWidth="90" Margin="2"/>
            <TextBlock DockPanel.Dock="Left" Text="Type: " VerticalAlignment="Center" Margin="2"/>
            <ComboBox DockPanel.Dock="Left" x:Name="cboType" VerticalAlignment="Center" Margin="2" SelectedIndex="{Binding TypeIndex}">
                <sys:String>Boolean</sys:String>
                <sys:String>Integer</sys:String>
                <sys:String>Float</sys:String>
                <sys:String>String</sys:String>
                <sys:String>Guid</sys:String>
            </ComboBox>
            <TextBlock DockPanel.Dock="Left" Text="Value: " VerticalAlignment="Center" Margin="10,2,2,2"/>
            <ContentControl x:Name="value" Content="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="2" Focusable="False"/>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Boolean">
                <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource BooleanPropertyView}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Integer">
                <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource IntegerPropertyView}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Float">
                <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource FloatPropertyView}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="String">
                <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource StringPropertyView}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Guid">
                <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource GuidPropertyView}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPreset, Mode=OneTime}" Value="True">
                <Setter TargetName="txtName" Property="IsEnabled" Value="False"/>
                <Setter TargetName="cboType" Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ComponentInstanceView">
        <Border Background="#10000000" CornerRadius="2" Margin="2" Padding="1" Focusable="False">
            <Expander IsExpanded="True" bhv:ExpanderHeaderEnlarger.IsAttached="True">
                <Expander.Header>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding Type}" Grid.Column="0" VerticalAlignment="Center"/>

                        <CheckBox Content="Available" Grid.Column="2" IsChecked="{Binding IsAvailable}" VerticalAlignment="Center" Margin="2" HorizontalContentAlignment="Right">
                            <ToolTipService.ToolTip>
                                <TextBlock Foreground="Red" Text="Warning: unchecked means it will not be stored to saved data"/>
                            </ToolTipService.ToolTip>
                        </CheckBox>
                        <Button Content="X" Grid.Column="3" ToolTipService.ToolTip="Remove Component" Margin="8,1,1,1" Command="{Binding RemoveComponentCommand, Mode=OneTime}" Width="18" Height="18" VerticalAlignment="Center"/>
                    </Grid>
                </Expander.Header>
                <StackPanel Focusable="False">
                    <Menu Margin="1" Background="Transparent">
                        <MenuItem Header="+" Margin="2,0,2,0" FontSize="14" ItemsSource="{Binding AvailableProperties, Mode=OneTime}" Command="{Binding AddPropertyCommand, Mode=OneTime}" ToolTipService.ToolTip="Add a property">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding DisplayText, Mode=OneTime}"/>
                                    <Setter Property="Command" Value="{Binding ClickCommand, Mode=OneTime}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                    <Setter Property="ItemsSource" Value="{Binding Values, Mode=OneTime}"/>
                                    <Setter Property="ToolTipService.ToolTip" Value="{Binding Description, Mode=OneTime}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="Copy" Margin="2,0,2,0" Command="{Binding CopyParametersCommand, Mode=OneTime}" Padding="1" VerticalAlignment="Center" ToolTipService.ToolTip="Copy all properties to clipboard"/>
                        <MenuItem Header="Paste" Margin="2,0,2,0" Padding="1">
                            <MenuItem Header="Overwrite" Command="{Binding OverwritePasteParametersCommand, Mode=OneTime}" ToolTipService.ToolTip="Paste properties overwriting the existing ones of same name and type"/>
                            <MenuItem Header="Additive" Command="{Binding AdditivePasteParametersCommand, Mode=OneTime}" ToolTipService.ToolTip="Paste properties adding as new after the existing properties"/>
                        </MenuItem>
                    </Menu>
                    <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource ComponentInstancePropertyView}" Focusable="False"/>
                </StackPanel>
            </Expander>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ComponentInstancesView">
        <DockPanel LastChildFill="True" Margin="2" Focusable="False">
            <TextBlock DockPanel.Dock="Top" Text="Components: " Grid.Column="0" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="12"/>
            <ScrollViewer VerticalScrollBarVisibility="Visible" Focusable="False">
                <ItemsControl Margin="2" ItemsSource="{Binding Components}" ItemTemplate="{StaticResource ComponentInstanceView}" Focusable="False"/>
            </ScrollViewer>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="ComponentView">
        <Border x:Name="root" bhv:DragDrop.DragSource="{Binding}" ToolTipService.ToolTip="{Binding Type, Mode=OneTime}">
            <Border CornerRadius="2" Background="#12000000" Margin="2" Padding="4">
                <TextBlock Text="{Binding Type}" Margin="1" Padding="1"/>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter TargetName="root" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ComponentToolBoxView">
        <DockPanel LastChildFill="True" Margin="2" Focusable="False">
            <TextBlock DockPanel.Dock="Top" Text="Components:" FontWeight="Bold" FontSize="12" Margin="2"/>
            <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2" Focusable="False">
                <TextBlock Text="Filter: " FontSize="12" VerticalAlignment="Center" Margin="2"/>
                <TextBox Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Margin="2" Padding="2" VerticalAlignment="Center"/>
            </DockPanel>
            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="2" Focusable="False">
                <ItemsControl ItemsSource="{Binding Components}" ItemTemplate="{StaticResource ComponentView}" Focusable="False"/>
            </ScrollViewer>
        </DockPanel>
    </DataTemplate>

    <CheckBox x:Key="MenuItemCheckBoxResource" x:Shared="False" IsChecked="{Binding IsEnabled}"/>

    <Style x:Key="CanvasRendererMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Header" Value="{Binding Name, Mode=OneTime}"/>
        <Setter Property="Icon" Value="{StaticResource MenuItemCheckBoxResource}"/>
        <Setter Property="Command" Value="{Binding ConfigureCommand, Mode=OneTime}"/>
    </Style>
    
    <Style x:Key="LayerDataIOExtensionMenuItemStyle" TargetType="MenuItem">
        <Setter Property="StaysOpenOnClick" Value="True"/>
    </Style>

    <DataTemplate x:Key="LayerDataIOExtensionMenuItemView">
        <Grid Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding DisplayText, Mode=OneTime}" VerticalAlignment="Center" Margin="4"/>
            <Button Content="Run" Grid.Column="2" Margin="2" Padding="6,2,6,2" MinWidth="60" Command="{Binding RunCommand, Mode=OneTime}" VerticalAlignment="Center"/>
            <Button Content="Configure" x:Name="btnConfigure" Grid.Column="3" Margin="2" Padding="6,2,6,2" Command="{Binding ConfigureCommand, Mode=OneTime}" VerticalAlignment="Center"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HasConfiguration, Mode=OneTime}" Value="False">
                <Setter TargetName="btnConfigure" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="RootView">

        <Grid Focusable="False">
            <Grid.ColumnDefinitions>
                <!-- left pane / main view / right pane -->
                <ColumnDefinition Width="1.7*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2.7*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <DockPanel LastChildFill="True" Grid.Column="0">
                <Menu DockPanel.Dock="Top" FontSize="14">
                    <MenuItem Header="_File">
                        <MenuItem Header="_Generate Project..." Command="{Binding FileGenerateDefaultSettingsFile, Mode=OneTime}"/>
                        <MenuItem Header="_Load Project..." Command="{Binding FileLoadProjectSettingsCommand, Mode=OneTime}"/>
                        <MenuItem Header="_Reload current project" Command="{Binding FileReloadProjectSettingsCommand, Mode=OneTime}" x:Name="mnuReloadProj"/>
                        <Separator/>
                        <MenuItem Header="_New" Command="New"/>
                        <MenuItem Header="_Open..." Command="Open"/>
                        <MenuItem Header="_Save" Command="Save"/>
                        <MenuItem Header="Save _As..." Command="SaveAs"/>
                        <Separator x:Name="sepImportersExporters"/>
                        <MenuItem x:Name="mnuImporters" Header="_Import" ItemsSource="{Binding LayerDataImporterViewModels}" ItemTemplate="{StaticResource LayerDataIOExtensionMenuItemView}" ItemContainerStyle="{StaticResource LayerDataIOExtensionMenuItemStyle}"/>
                        <MenuItem x:Name="mnuExporters" Header="_Export" ItemsSource="{Binding LayerDataExporterViewModels}" ItemTemplate="{StaticResource LayerDataIOExtensionMenuItemView}" ItemContainerStyle="{StaticResource LayerDataIOExtensionMenuItemStyle}"/>
                        <Separator/>
                        <MenuItem Header="Export screen captures..." Command="{Binding FileExportScreenCaptures, Mode=OneTime}"/>
                        <Separator/>
                        <MenuItem Header="_Close" Command="Close"/>
                    </MenuItem>
                    <MenuItem Header="_Edit">
                        <MenuItem Header="Cu_t" Command="Cut"/>
                        <MenuItem Header="_Copy" Command="Copy"/>
                        <MenuItem Header="_Paste" Command="Paste"/>
                        <Separator/>
                        <MenuItem Header="_Select All" Command="SelectAll"/>
                        <MenuItem Header="_Deselect All" Command="{x:Static local:CustomRoutedCommands.DeselectAll}"/>
                        <MenuItem Header="_Invert Selection" Command="{x:Static local:CustomRoutedCommands.InvertSelection}"/>
                        <Separator/>
                        <MenuItem Header="_Enable All Blocks" Command="{x:Static local:CustomRoutedCommands.EnableAllBlocks}"/>
                        <MenuItem Header="Dis_able All Blocks" Command="{x:Static local:CustomRoutedCommands.DisableAllBlocks}"/>
                        <Separator/>
                        <MenuItem Header="Copy GUID to clipboard" Command="{x:Static local:CustomRoutedCommands.GenerateGuid}"/>
                    </MenuItem>
                    <MenuItem Header="_Extensions">
                        <MenuItem Header="Recompose" Command="{Binding RecomposeExtentionsCommand, Mode=OneTime}"/>
                        <Separator/>
                        <MenuItem Header="Validation" Command="{Binding ValidationCommand, Mode=OneTime}"/>
                        <MenuItem Header="Canvas Renderers">
                            <MenuItem Header="Background" ItemsSource="{Binding CanvasBackgroundRenderers}" ItemContainerStyle="{StaticResource CanvasRendererMenuItemStyle}"/>
                            <MenuItem Header="Foreground" ItemsSource="{Binding CanvasForegroundRenderers}" ItemContainerStyle="{StaticResource CanvasRendererMenuItemStyle}"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_?">
                        <MenuItem Header="_About" Command="{Binding HelpAboutMenuCommand, Mode=OneTime}"/>
                    </MenuItem>
                </Menu>
                <Grid>
                    <Grid.RowDefinitions>
                        <!-- features box / components box -->
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5*"/>
                    </Grid.RowDefinitions>
                    <ContentControl Grid.Row="0" Content="{Binding FeatureToolBox}" ContentTemplate="{StaticResource FeatureToolBoxView}" Focusable="False"/>
                    <GridSplitter Grid.Row="1" Height="6" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" VerticalAlignment="Top" ResizeDirection="Rows"/>
                    <ContentControl Grid.Row="2" Content="{Binding ComponentToolBox}" ContentTemplate="{StaticResource ComponentToolBoxView}" Focusable="False"/>
                </Grid>
            </DockPanel>
            <GridSplitter Grid.Column="1" Width="6" ResizeBehavior="PreviousAndNext"/>

            <ContentControl Grid.Column="2" Margin="4, 0, 4, 0" Content="{Binding LayerData}" ContentTemplate="{StaticResource LayerDataView}" Focusable="False"/>
            <GridSplitter Grid.Column="3" Width="6" ResizeBehavior="PreviousAndNext"/>

            <Grid Grid.Column="4" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <!-- elements box / component instances box / element settings --> 
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="16"/>
                </Grid.RowDefinitions>
                <ContentControl Grid.Row="0" Content="{Binding ElementToolBox}" ContentTemplate="{StaticResource ElementToolBoxView}" Focusable="False"/>
                <GridSplitter Grid.Row="1" Height="6" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" VerticalAlignment="Top" ResizeDirection="Rows"/>
                <ContentControl Grid.Row="2" Content="{Binding LayerData.SelectedBlock.SelectedElement}" ContentTemplate="{StaticResource ComponentInstancesView}" Focusable="False"/>
                <ContentControl Grid.Row="3" Content="{Binding LayerData.SelectedBlock.SelectedValues}" ContentTemplate="{StaticResource SelectedBlockElementsView}" Focusable="False"/>
            </Grid>
            
            <TextBlock x:Name="info" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="2" Padding="2"/>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SaveStatus}" Value="Saving">
                <Setter TargetName="info" Property="Text" Value="Saving..."/>
                <Setter TargetName="info" Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SaveStatus}" Value="SaveSucceeded">
                <Setter TargetName="info" Property="Text" Value="Save succeeded"/>
                <Setter TargetName="info" Property="Foreground" Value="Green"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SaveStatus}" Value="SaveFailed">
                <Setter TargetName="info" Property="Text" Value="Save failed"/>
                <Setter TargetName="info" Property="Foreground" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasCurrentProject}" Value="False">
                <Setter TargetName="mnuReloadProj" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding HasLayerDataImporterOrExporter}" Value="False">
                <Setter TargetName="sepImportersExporters" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasLayerDataImporter}" Value="False">
                <Setter TargetName="mnuImporters" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasLayerDataExporter}" Value="False">
                <Setter TargetName="mnuExporters" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>
